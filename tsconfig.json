// https://www.typescriptlang.org/docs/handbook/compiler-options.html
{
  "compilerOptions": {
    /* Basic Options */
    // ES5 чтобы как babel
    "target": "ES5",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    // Important! Without commonjs it wont work.
    "module": "commonjs",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "lib": [                                  /* Specify library files to be included in the compilation. https://github.com/Microsoft/TypeScript/tree/master/lib */
      "esnext",
      "esnext.asynciterable",
      "dom",
      "dom.iterable",
      "es2015",
      "es2016",
      "es2017",
      "es2018"
    ],
    "allowJs": true,                          /* Allow javascript files to be compiled. */
    // "checkJs": true,                       /* Report errors in .js files. */
    // "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "declaration": false,                     /* Generates corresponding '.d.ts' file. */
    "sourceMap": true,                        /* Generates corresponding '.map' file. */
    // "outFile": "./",                       /* Concatenate and emit output to single file. */
    // "outDir": "dist",                      /* Redirect output structure to the directory. */
    // "rootDir": "src",                      /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    // "removeComments": true,                /* Do not emit comments to output. */
    // "noEmit": true,                        /* Do not emit outputs. */
    "importHelpers": true,                    /* Import emit helpers from 'tslib'. The compiler will use the tslib package and reduce the size of the output. */
    "downlevelIteration": true,               /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */


    /* Module Resolution Options */
    "moduleResolution": "node",               /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "resolveJsonModule": true,                /* Often in Node.js applications a .json is needed. Allows for importing, extracting types from and generating .json files.
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "baseUrl": "./src",                       /* Base directory to resolve non-absolute module names. */
    "paths": {                                /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
      "~/*": ["./*"]
    },
    "typeRoots": [                            /* List of folders to include type definitions from. */
      "./src/types", "./node_modules/@types"],
    "types": [                                /* Type declaration files to be included in compilation. */
      "express",
      "node"
    ],
    "allowSyntheticDefaultImports": true,     /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */

    /* Strict Type-Checking Options */
    "strict": false,                          /* Enable all strict type-checking options. */
    // "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,              /* Enable strict null checks. */
    // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
    // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */


    /* Additional Checks */
    "noUnusedLocals": true,                   /* Report errors on unused locals. */
    // "noUnusedParameters": true,            /* Report errors on unused parameters. */
    // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
    // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */
    "noImplicitAny": false,                   /* Raise error on expressions and declarations with an implied any type. */
    "noImplicitThis": false,                  /* Raise error on this expressions with an implied any type. */
    // "suppressImplicitAnyIndexErrors": true,/* Suppress --noImplicitAny errors for indexing objects lacking index signatures. See issue #1232 for more details. */
    "strictNullChecks": true,                 /* In strict null checking mode, the null and undefined values are not in the domain of every type and are only assignable to themselves and any (the one exception being that undefined is also assignable to void). */
    //    "removeComments": true,


    /* Experimental Options */
    "experimentalDecorators": true,           /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata": true             /* Enables experimental support for emitting type metadata for decorators. */
  },
  "include": [
    "src/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}
